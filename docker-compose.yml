version: '3.6'

services:

  # dev and build container for react ui
  app-fe:
    build:
      context: ./ui-tasker
      dockerfile: ./delivery/Dockerfile
      target: dev
    depends_on:
      - app-be
    environment:
      - BASEPATH_BE=http://app-be:8080
    expose:
      - "3000"
    ports:
      - "3000:3000"
  
  # dev and build container for api-rest
  app-be:
    build:
      context: ./api-rest-tasker
      dockerfile: ./delivery/Dockerfile
      target: dev
    depends_on:
      - db
      - provision-db
    environment:
      - DBHOST=db
    expose:
      - "8080"
      - "8081"
    ports:
      - "8080:8080"
      - "8081:8081"

  ui-tasker:
    build:
      context: ./ui-tasker
      dockerfile: ./delivery/Dockerfile
      target: prod
    depends_on:
      - api-rest-tasker
    environment:
      - BASEPATH_BE=http://api-rest-tasker:8080
    expose:
      - "80"
    ports:
      - "80:80"      


  api-rest-tasker:
    build:
      context: ./api-rest-tasker
      dockerfile: ./delivery/Dockerfile
      target: prod
    depends_on:
      - db
      - provision-db   
    environment:
      - DBHOST=db      

  # Postgres database
  db:
    image: postgres:11.5
    environment:
      - POSTGRES_DB=tasker
      - POSTGRES_USER=tasker
      - POSTGRES_PASSWORD=tasker
    command: ["postgres", "-c", "log_statement=all"]      
    expose:
      - "5432"
    ports:
      - "5432:5432"

  # Simple provision, move to liquibase...
  provision-db:
    image: postgres:11.5
    command: ["psql", "-f", "creation.sql"]

    depends_on:
      - db

    entrypoint:
      - sh
      - -c
      - |
        ./wait-for-it.sh --timeout=160 db:5432
        sleep 2
        exec "$$0" "$$@"

    environment:
      - PGUSER=tasker
      - PGPASSWORD=tasker
      - PGDATABASE=tasker
      - PGHOST=db
    working_dir: /opt/app
    volumes:
      - ./api-rest-tasker/delivery:/opt/app:delegated

networks:
  default:
